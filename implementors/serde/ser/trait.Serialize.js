(function() {var implementors = {};
implementors["arrow"] = [{"text":"impl Serialize for DataType","synthetic":false,"types":[]},{"text":"impl Serialize for DateUnit","synthetic":false,"types":[]},{"text":"impl Serialize for TimeUnit","synthetic":false,"types":[]},{"text":"impl Serialize for IntervalUnit","synthetic":false,"types":[]},{"text":"impl Serialize for Field","synthetic":false,"types":[]},{"text":"impl Serialize for Schema","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJson","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJsonSchema","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJsonField","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJsonFieldDictionary","synthetic":false,"types":[]},{"text":"impl Serialize for DictionaryIndexType","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJsonBatch","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJsonDictionaryBatch","synthetic":false,"types":[]},{"text":"impl Serialize for ArrowJsonColumn","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl Serialize for BStr","synthetic":false,"types":[]},{"text":"impl Serialize for BString","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Serialize for NaiveDate","synthetic":false,"types":[]},{"text":"impl Serialize for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Serialize for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Serialize for DateTime&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Weekday","synthetic":false,"types":[]},{"text":"impl Serialize for Month","synthetic":false,"types":[]}];
implementors["rusoto_signature"] = [{"text":"impl Serialize for Region","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()