(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;T:&nbsp;Any&gt; Error for CapacityError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["arrow"] = [{"text":"impl Error for ArrowError","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Error for DecodeError","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl Error for FromUtf8Error","synthetic":false,"types":[]},{"text":"impl Error for Utf8Error","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]},{"text":"impl Error for RoundingError","synthetic":false,"types":[]}];
implementors["connector_agent"] = [{"text":"impl Error for ConnectorAgentError","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Error for TrySelectError","synthetic":false,"types":[]},{"text":"impl Error for SelectTimeoutError","synthetic":false,"types":[]}];
implementors["csv"] = [{"text":"impl Error for DeserializeError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for FromUtf8Error","synthetic":false,"types":[]},{"text":"impl Error for Utf8Error","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Any&gt; Error for IntoInnerError&lt;W&gt;","synthetic":false,"types":[]}];
implementors["digest"] = [{"text":"impl Error for InvalidOutputSize","synthetic":false,"types":[]}];
implementors["failure"] = [{"text":"impl&lt;E:&nbsp;Display + Debug&gt; Error for Compat&lt;E&gt;","synthetic":false,"types":[]}];
implementors["flatbuffers"] = [{"text":"impl Error for InvalidFlatbuffer","synthetic":false,"types":[]}];
implementors["flate2"] = [{"text":"impl Error for DecompressError","synthetic":false,"types":[]},{"text":"impl Error for CompressError","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl Error for SendError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for Canceled","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Error for EnterError","synthetic":false,"types":[]}];
implementors["futures_task"] = [{"text":"impl Error for SpawnError","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl Error for Aborted","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any, Item&gt; Error for ReuniteError&lt;T, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any&gt; Error for ReuniteError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["hex"] = [{"text":"impl Error for FromHexError","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl Error for InvalidHeaderName","synthetic":false,"types":[]},{"text":"impl Error for InvalidHeaderValue","synthetic":false,"types":[]},{"text":"impl Error for ToStrError","synthetic":false,"types":[]},{"text":"impl Error for InvalidMethod","synthetic":false,"types":[]},{"text":"impl Error for InvalidStatusCode","synthetic":false,"types":[]},{"text":"impl Error for InvalidUri","synthetic":false,"types":[]},{"text":"impl Error for InvalidUriParts","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["httparse"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["httpdate"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["humantime"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["hyper"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for InvalidNameError","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Error for SetLoggerError","synthetic":false,"types":[]},{"text":"impl Error for ParseLevelError","synthetic":false,"types":[]}];
implementors["native_tls"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Error for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Any + Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ndarray"] = [{"text":"impl Error for ShapeError","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Error for ParseBigIntError","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Error for TryFromBigIntError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;E:&nbsp;Error&gt; Error for ParseComplexError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl Error for ParseRatioError","synthetic":false,"types":[]}];
implementors["openssl"] = [{"text":"impl Error for ErrorStack","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug&gt; Error for HandshakeError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Error for X509VerifyResult","synthetic":false,"types":[]}];
implementors["postgres_types"] = [{"text":"impl Error for WasNull","synthetic":false,"types":[]},{"text":"impl Error for WrongType","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Error for LexError","synthetic":false,"types":[]}];
implementors["pyo3"] = [{"text":"impl Error for PyErr","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Error for PyDowncastError&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Error for PyBaseException","synthetic":false,"types":[]},{"text":"impl Error for PyException","synthetic":false,"types":[]},{"text":"impl Error for PyStopAsyncIteration","synthetic":false,"types":[]},{"text":"impl Error for PyStopIteration","synthetic":false,"types":[]},{"text":"impl Error for PyGeneratorExit","synthetic":false,"types":[]},{"text":"impl Error for PyArithmeticError","synthetic":false,"types":[]},{"text":"impl Error for PyLookupError","synthetic":false,"types":[]},{"text":"impl Error for PyAssertionError","synthetic":false,"types":[]},{"text":"impl Error for PyAttributeError","synthetic":false,"types":[]},{"text":"impl Error for PyBufferError","synthetic":false,"types":[]},{"text":"impl Error for PyEOFError","synthetic":false,"types":[]},{"text":"impl Error for PyFloatingPointError","synthetic":false,"types":[]},{"text":"impl Error for PyOSError","synthetic":false,"types":[]},{"text":"impl Error for PyImportError","synthetic":false,"types":[]},{"text":"impl Error for PyModuleNotFoundError","synthetic":false,"types":[]},{"text":"impl Error for PyIndexError","synthetic":false,"types":[]},{"text":"impl Error for PyKeyError","synthetic":false,"types":[]},{"text":"impl Error for PyKeyboardInterrupt","synthetic":false,"types":[]},{"text":"impl Error for PyMemoryError","synthetic":false,"types":[]},{"text":"impl Error for PyNameError","synthetic":false,"types":[]},{"text":"impl Error for PyOverflowError","synthetic":false,"types":[]},{"text":"impl Error for PyRuntimeError","synthetic":false,"types":[]},{"text":"impl Error for PyRecursionError","synthetic":false,"types":[]},{"text":"impl Error for PyNotImplementedError","synthetic":false,"types":[]},{"text":"impl Error for PySyntaxError","synthetic":false,"types":[]},{"text":"impl Error for PyReferenceError","synthetic":false,"types":[]},{"text":"impl Error for PySystemError","synthetic":false,"types":[]},{"text":"impl Error for PySystemExit","synthetic":false,"types":[]},{"text":"impl Error for PyTypeError","synthetic":false,"types":[]},{"text":"impl Error for PyUnboundLocalError","synthetic":false,"types":[]},{"text":"impl Error for PyUnicodeError","synthetic":false,"types":[]},{"text":"impl Error for PyUnicodeDecodeError","synthetic":false,"types":[]},{"text":"impl Error for PyUnicodeEncodeError","synthetic":false,"types":[]},{"text":"impl Error for PyUnicodeTranslateError","synthetic":false,"types":[]},{"text":"impl Error for PyValueError","synthetic":false,"types":[]},{"text":"impl Error for PyZeroDivisionError","synthetic":false,"types":[]},{"text":"impl Error for PyBlockingIOError","synthetic":false,"types":[]},{"text":"impl Error for PyBrokenPipeError","synthetic":false,"types":[]},{"text":"impl Error for PyChildProcessError","synthetic":false,"types":[]},{"text":"impl Error for PyConnectionError","synthetic":false,"types":[]},{"text":"impl Error for PyConnectionAbortedError","synthetic":false,"types":[]},{"text":"impl Error for PyConnectionRefusedError","synthetic":false,"types":[]},{"text":"impl Error for PyConnectionResetError","synthetic":false,"types":[]},{"text":"impl Error for PyFileExistsError","synthetic":false,"types":[]},{"text":"impl Error for PyFileNotFoundError","synthetic":false,"types":[]},{"text":"impl Error for PyInterruptedError","synthetic":false,"types":[]},{"text":"impl Error for PyIsADirectoryError","synthetic":false,"types":[]},{"text":"impl Error for PyNotADirectoryError","synthetic":false,"types":[]},{"text":"impl Error for PyPermissionError","synthetic":false,"types":[]},{"text":"impl Error for PyProcessLookupError","synthetic":false,"types":[]},{"text":"impl Error for PyTimeoutError","synthetic":false,"types":[]},{"text":"impl Error for PyEnvironmentError","synthetic":false,"types":[]},{"text":"impl Error for PyIOError","synthetic":false,"types":[]},{"text":"impl Error for CancelledError","synthetic":false,"types":[]},{"text":"impl Error for InvalidStateError","synthetic":false,"types":[]},{"text":"impl Error for TimeoutError","synthetic":false,"types":[]},{"text":"impl Error for IncompleteReadError","synthetic":false,"types":[]},{"text":"impl Error for LimitOverrunError","synthetic":false,"types":[]},{"text":"impl Error for QueueEmpty","synthetic":false,"types":[]},{"text":"impl Error for QueueFull","synthetic":false,"types":[]},{"text":"impl Error for herror","synthetic":false,"types":[]},{"text":"impl Error for gaierror","synthetic":false,"types":[]},{"text":"impl Error for timeout","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Error for Py&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Error + PyTypeInfo,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AsRefTarget: Display,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Error for PanicException","synthetic":false,"types":[]}];
implementors["r2d2"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Error for BernoulliError","synthetic":false,"types":[]},{"text":"impl Error for WeightedError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Error for ThreadPoolBuildError","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CaseFoldError","synthetic":false,"types":[]},{"text":"impl Error for UnicodeWordError","synthetic":false,"types":[]}];
implementors["rusoto_core"] = [{"text":"impl&lt;E:&nbsp;Error + 'static&gt; Error for RusotoError&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Error for HttpDispatchError","synthetic":false,"types":[]},{"text":"impl Error for TlsError","synthetic":false,"types":[]}];
implementors["rusoto_credential"] = [{"text":"impl Error for CredentialsError","synthetic":false,"types":[]}];
implementors["rusoto_s3"] = [{"text":"impl Error for AbortMultipartUploadError","synthetic":false,"types":[]},{"text":"impl Error for CompleteMultipartUploadError","synthetic":false,"types":[]},{"text":"impl Error for CopyObjectError","synthetic":false,"types":[]},{"text":"impl Error for CreateBucketError","synthetic":false,"types":[]},{"text":"impl Error for CreateMultipartUploadError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketAnalyticsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketCorsError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketEncryptionError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketIntelligentTieringConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketInventoryConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketLifecycleError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketMetricsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketOwnershipControlsError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketPolicyError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketReplicationError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketTaggingError","synthetic":false,"types":[]},{"text":"impl Error for DeleteBucketWebsiteError","synthetic":false,"types":[]},{"text":"impl Error for DeleteObjectError","synthetic":false,"types":[]},{"text":"impl Error for DeleteObjectTaggingError","synthetic":false,"types":[]},{"text":"impl Error for DeleteObjectsError","synthetic":false,"types":[]},{"text":"impl Error for DeletePublicAccessBlockError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketAccelerateConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketAclError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketAnalyticsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketCorsError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketEncryptionError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketIntelligentTieringConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketInventoryConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLifecycleError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLifecycleConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLocationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketLoggingError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketMetricsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketNotificationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketNotificationConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketOwnershipControlsError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketPolicyError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketPolicyStatusError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketReplicationError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketRequestPaymentError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketTaggingError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketVersioningError","synthetic":false,"types":[]},{"text":"impl Error for GetBucketWebsiteError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectAclError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectLegalHoldError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectLockConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectRetentionError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectTaggingError","synthetic":false,"types":[]},{"text":"impl Error for GetObjectTorrentError","synthetic":false,"types":[]},{"text":"impl Error for GetPublicAccessBlockError","synthetic":false,"types":[]},{"text":"impl Error for HeadBucketError","synthetic":false,"types":[]},{"text":"impl Error for HeadObjectError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketAnalyticsConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketIntelligentTieringConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketInventoryConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketMetricsConfigurationsError","synthetic":false,"types":[]},{"text":"impl Error for ListBucketsError","synthetic":false,"types":[]},{"text":"impl Error for ListMultipartUploadsError","synthetic":false,"types":[]},{"text":"impl Error for ListObjectVersionsError","synthetic":false,"types":[]},{"text":"impl Error for ListObjectsError","synthetic":false,"types":[]},{"text":"impl Error for ListObjectsV2Error","synthetic":false,"types":[]},{"text":"impl Error for ListPartsError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketAccelerateConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketAclError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketAnalyticsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketCorsError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketEncryptionError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketIntelligentTieringConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketInventoryConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketLifecycleError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketLifecycleConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketLoggingError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketMetricsConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketNotificationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketNotificationConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketOwnershipControlsError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketPolicyError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketReplicationError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketRequestPaymentError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketTaggingError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketVersioningError","synthetic":false,"types":[]},{"text":"impl Error for PutBucketWebsiteError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectAclError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectLegalHoldError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectLockConfigurationError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectRetentionError","synthetic":false,"types":[]},{"text":"impl Error for PutObjectTaggingError","synthetic":false,"types":[]},{"text":"impl Error for PutPublicAccessBlockError","synthetic":false,"types":[]},{"text":"impl Error for RestoreObjectError","synthetic":false,"types":[]},{"text":"impl Error for SelectObjectContentError","synthetic":false,"types":[]},{"text":"impl Error for UploadPartError","synthetic":false,"types":[]},{"text":"impl Error for UploadPartCopyError","synthetic":false,"types":[]}];
implementors["rusoto_signature"] = [{"text":"impl Error for ParseRegionError","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["stringprep"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["strum"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Error for ParseColorError","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for ConversionRange","synthetic":false,"types":[]},{"text":"impl Error for ComponentRange","synthetic":false,"types":[]},{"text":"impl Error for IndeterminateOffset","synthetic":false,"types":[]},{"text":"impl Error for Format","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tokio"] = [{"text":"impl Error for ReuniteError","synthetic":false,"types":[]},{"text":"impl Error for ReuniteError","synthetic":false,"types":[]},{"text":"impl Error for JoinError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for TryLockError","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for AcquireError","synthetic":false,"types":[]},{"text":"impl Error for TryAcquireError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Elapsed","synthetic":false,"types":[]}];
implementors["tokio_postgres"] = [{"text":"impl Error for DbError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for NoTlsError","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Error for LengthDelimitedCodecError","synthetic":false,"types":[]},{"text":"impl Error for LinesCodecError","synthetic":false,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Error for SetGlobalDefaultError","synthetic":false,"types":[]},{"text":"impl Error for ParseLevelError","synthetic":false,"types":[]},{"text":"impl Error for ParseLevelFilterError","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for EmitterError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()